// <auto-generated />
using System;
using ByteCuisine.Server.Controllers.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ByteCuisine.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240110192247_Test")]
    partial class Test
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ByteCuisine.Shared.Account", b =>
                {
                    b.Property<int>("User_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PictureData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("ByteCuisine.Shared.Dish", b =>
                {
                    b.Property<int>("Dish_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Dish_id"));

                    b.Property<double>("Callories")
                        .HasColumnType("float");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("DishImage")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Dish_id");

                    b.ToTable("Dishes");
                });

            modelBuilder.Entity("ByteCuisine.Shared.DishIngredient", b =>
                {
                    b.Property<int>("Dish_Id")
                        .HasColumnType("int");

                    b.Property<int>("Ingredient_Id")
                        .HasColumnType("int");

                    b.HasKey("Dish_Id", "Ingredient_Id");

                    b.HasIndex("Ingredient_Id");

                    b.ToTable("DishIngredients");
                });

            modelBuilder.Entity("ByteCuisine.Shared.Ingredient", b =>
                {
                    b.Property<int>("Ingredient_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ingredient_id"));

                    b.Property<double>("Callories")
                        .HasColumnType("float");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Ingredient_id");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("ByteCuisine.Shared.VirtualFridge", b =>
                {
                    b.Property<int>("VirtualFridge_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VirtualFridge_id"));

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Ingridient_id")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.HasKey("VirtualFridge_id");

                    b.ToTable("VirtualFridges");
                });

            modelBuilder.Entity("ByteCuisine.Shared.DishIngredient", b =>
                {
                    b.HasOne("ByteCuisine.Shared.Dish", "Dish")
                        .WithMany("DishIngredients")
                        .HasForeignKey("Dish_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByteCuisine.Shared.Ingredient", "Ingredient")
                        .WithMany("DishIngredients")
                        .HasForeignKey("Ingredient_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("ByteCuisine.Shared.Dish", b =>
                {
                    b.Navigation("DishIngredients");
                });

            modelBuilder.Entity("ByteCuisine.Shared.Ingredient", b =>
                {
                    b.Navigation("DishIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
